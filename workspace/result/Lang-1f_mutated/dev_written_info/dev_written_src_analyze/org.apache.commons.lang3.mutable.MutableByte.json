{
  "filepath": "/tmp/Lang-1f/src/main/java/org/apache/commons/lang3/mutable/MutableByte.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "MutableByte",
      "is_interface": false,
      "parent_types": [
        "java.lang.Number",
        "java.lang.Comparable\u003corg.apache.commons.lang3.mutable.MutableByte\u003e",
        "Mutable\u003cNumber\u003e"
      ],
      "begin_line": 28,
      "end_line": 286,
      "comment": "\n * A mutable \u003ccode\u003ebyte\u003c/code\u003e wrapper.\n * \u003cp\u003e\n * Note that as MutableByte does not extend Byte, it is not treated by String.format as a Byte parameter. \n * \n * @see Byte\n * @since 2.1\n * @version $Id$\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 35,
      "end_line": 35,
      "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
      "type": "field",
      "varNames": [
        "value"
      ],
      "begin_line": 38,
      "end_line": 38,
      "comment": " The mutable value. "
    },
    {
      "type": "constructor",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.MutableByte()",
      "begin_line": 43,
      "end_line": 45,
      "comment": "\n     * Constructs a new MutableByte with the default value of zero.\n     "
    },
    {
      "type": "constructor",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.MutableByte(byte)",
      "begin_line": 52,
      "end_line": 55,
      "comment": "\n     * Constructs a new MutableByte with the specified value.\n     * \n     * @param value  the initial value to store\n     "
    },
    {
      "type": "constructor",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.MutableByte(java.lang.Number)",
      "begin_line": 63,
      "end_line": 66,
      "comment": "\n     * Constructs a new MutableByte with the specified value.\n     * \n     * @param value  the initial value to store, not null\n     * @throws NullPointerException if the object is null\n     "
    },
    {
      "type": "constructor",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.MutableByte(java.lang.String)",
      "begin_line": 75,
      "end_line": 78,
      "comment": "\n     * Constructs a new MutableByte parsing the given string.\n     * \n     * @param value  the string to parse, not null\n     * @throws NumberFormatException if the string cannot be parsed into a byte\n     * @since 2.5\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.getValue()",
      "begin_line": 86,
      "end_line": 89,
      "comment": "\n     * Gets the value as a Byte instance.\n     * \n     * @return the value as a Byte, never null\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.setValue(byte)",
      "begin_line": 96,
      "end_line": 98,
      "comment": "\n     * Sets the value.\n     * \n     * @param value  the value to set\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.setValue(java.lang.Number)",
      "begin_line": 106,
      "end_line": 109,
      "comment": "\n     * Sets the value from any Number instance.\n     * \n     * @param value  the value to set, not null\n     * @throws NullPointerException if the object is null\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.increment()",
      "begin_line": 117,
      "end_line": 119,
      "comment": "\n     * Increments the value.\n     *\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.decrement()",
      "begin_line": 126,
      "end_line": 128,
      "comment": "\n     * Decrements the value.\n     *\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.add(byte)",
      "begin_line": 137,
      "end_line": 139,
      "comment": "\n     * Adds a value to the value of this instance.\n     * \n     * @param operand  the value to add, not null\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.add(java.lang.Number)",
      "begin_line": 148,
      "end_line": 150,
      "comment": "\n     * Adds a value to the value of this instance.\n     * \n     * @param operand  the value to add, not null\n     * @throws NullPointerException if the object is null\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.subtract(byte)",
      "begin_line": 158,
      "end_line": 160,
      "comment": "\n     * Subtracts a value from the value of this instance.\n     * \n     * @param operand  the value to subtract, not null\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.subtract(java.lang.Number)",
      "begin_line": 169,
      "end_line": 171,
      "comment": "\n     * Subtracts a value from the value of this instance.\n     * \n     * @param operand  the value to subtract, not null\n     * @throws NullPointerException if the object is null\n     * @since Commons Lang 2.2\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.byteValue()",
      "begin_line": 180,
      "end_line": 183,
      "comment": "\n     * Returns the value of this MutableByte as a byte.\n     *\n     * @return the numeric value represented by this object after conversion to type byte.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.intValue()",
      "begin_line": 190,
      "end_line": 193,
      "comment": "\n     * Returns the value of this MutableByte as an int.\n     *\n     * @return the numeric value represented by this object after conversion to type int.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.longValue()",
      "begin_line": 200,
      "end_line": 203,
      "comment": "\n     * Returns the value of this MutableByte as a long.\n     *\n     * @return the numeric value represented by this object after conversion to type long.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.floatValue()",
      "begin_line": 210,
      "end_line": 213,
      "comment": "\n     * Returns the value of this MutableByte as a float.\n     *\n     * @return the numeric value represented by this object after conversion to type float.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.doubleValue()",
      "begin_line": 220,
      "end_line": 223,
      "comment": "\n     * Returns the value of this MutableByte as a double.\n     *\n     * @return the numeric value represented by this object after conversion to type double.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.toByte()",
      "begin_line": 231,
      "end_line": 233,
      "comment": "\n     * Gets this mutable as an instance of Byte.\n     *\n     * @return a Byte instance containing the value from this mutable\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.equals(java.lang.Object)",
      "begin_line": 244,
      "end_line": 250,
      "comment": "\n     * Compares this object to the specified object. The result is \u003ccode\u003etrue\u003c/code\u003e if and only if the argument is\n     * not \u003ccode\u003enull\u003c/code\u003e and is a \u003ccode\u003eMutableByte\u003c/code\u003e object that contains the same \u003ccode\u003ebyte\u003c/code\u003e value\n     * as this object.\n     * \n     * @param obj  the object to compare with, null returns false\n     * @return \u003ccode\u003etrue\u003c/code\u003e if the objects are the same; \u003ccode\u003efalse\u003c/code\u003e otherwise.\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.hashCode()",
      "begin_line": 257,
      "end_line": 260,
      "comment": "\n     * Returns a suitable hash code for this mutable.\n     * \n     * @return a suitable hash code\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.compareTo(org.apache.commons.lang3.mutable.MutableByte)",
      "begin_line": 269,
      "end_line": 273,
      "comment": "\n     * Compares this mutable to another in ascending order.\n     * \n     * @param other  the other mutable to compare to, not null\n     * @return negative if this is less, zero if equal, positive if greater\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.mutable.MutableByte.toString()",
      "begin_line": 281,
      "end_line": 284,
      "comment": "\n     * Returns the String value of this mutable.\n     * \n     * @return the mutable value as a string\n     "
    }
  ]
}