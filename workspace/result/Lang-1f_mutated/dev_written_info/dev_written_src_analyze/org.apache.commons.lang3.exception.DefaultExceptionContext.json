{
  "filepath": "/tmp/Lang-1f/src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "DefaultExceptionContext",
      "is_interface": false,
      "parent_types": [
        "ExceptionContext",
        "java.io.Serializable"
      ],
      "begin_line": 41,
      "end_line": 165,
      "comment": "\n * Default implementation of the context storing the label-value pairs for contexted exceptions.\n * \u003cp\u003e\n * This implementation is serializable, however this is dependent on the values that\n * are added also being serializable.\n * \u003c/p\u003e\n * \n * @see ContextedException\n * @see ContextedRuntimeException\n * @since 3.0\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 44,
      "end_line": 44,
      "comment": " The serialization version. "
    },
    {
      "type": "field",
      "varNames": [
        "contextValues"
      ],
      "begin_line": 47,
      "end_line": 47,
      "comment": " The list storing the label-data pairs. "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.addContextValue(java.lang.String, java.lang.Object)",
      "begin_line": 52,
      "end_line": 56,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.setContextValue(java.lang.String, java.lang.Object)",
      "begin_line": 61,
      "end_line": 71,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.getContextValues(java.lang.String)",
      "begin_line": 76,
      "end_line": 85,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.getFirstContextValue(java.lang.String)",
      "begin_line": 90,
      "end_line": 98,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.getContextLabels()",
      "begin_line": 103,
      "end_line": 110,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.getContextEntries()",
      "begin_line": 115,
      "end_line": 118,
      "comment": "\n     * {@inheritDoc}\n     "
    },
    {
      "type": "method",
      "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)",
      "begin_line": 126,
      "end_line": 163,
      "comment": "\n     * Builds the message containing the contextual information.\n     * \n     * @param baseMessage  the base exception message \u003cb\u003ewithout\u003c/b\u003e context information appended\n     * @return the exception message \u003cb\u003ewith\u003c/b\u003e context information appended, never null\n     "
    }
  ]
}