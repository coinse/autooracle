/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 29 17:45:55 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.Serializable;
import java.io.SerializablePermission;
import java.net.URI;
import org.apache.commons.lang.SerializationUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializationUtils_ESTest extends SerializationUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - false
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - false in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 3. serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 102
   * Goal 6. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 7. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 1: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:102 - ReplaceConstant - The OutputStream must not be null -> 
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;
      // Undeclared exception!
      try { 
        SerializationUtils.serialize((Serializable) serializablePermission0, (OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The OutputStream must not be null
         //
         verifyException("org.apache.commons.lang.SerializationUtils", e);
      }
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * Goal 1. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - true in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I43 Branch 2 IFNULL L114 - false in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 3. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 4. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 104
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 107
   * Goal 6. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 108
   * Goal 7. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 114
   * Goal 8. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 115
   * Goal 9. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 117
   * Goal 10. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 120
   * Goal 11. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 121
   * Goal 12. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 13. [METHODNOEX] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 14. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 2: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:114 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      SerializationUtils.serialize((Serializable) serializablePermission0, (OutputStream) bufferedOutputStream0);
      assertEquals("(\"java.io.SerializablePermission\" \"enableSubstitution\")", serializablePermission0.toString());
  }

  //Test case number: 2
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B: root-Branch
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B: root-Branch in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;)[B
   * Goal 3. [Output]: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:NonEmptyArray
   * Goal 4. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B: Line 132
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B: Line 133
   * Goal 6. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B: Line 134
   * Goal 7. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 8. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 104
   * Goal 9. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 107
   * Goal 10. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 108
   * Goal 11. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 114
   * Goal 12. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 115
   * Goal 13. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 119
   * Goal 14. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 121
   * Goal 15. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B
   * Goal 16. [METHODNOEX] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B
   * Goal 17. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 2: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:114 - ReplaceComparisonOperator = null -> != null
   * Goal 19. Weak Mutation 4: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:132 - ReplaceConstant - 512 -> 0
   * Goal 20. Weak Mutation 5: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:132 - ReplaceConstant - 512 -> 1
   * Goal 21. Weak Mutation 6: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:132 - ReplaceConstant - 512 -> -1
   * Goal 22. Weak Mutation 7: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:132 - ReplaceConstant - 512 -> 511
   * Goal 23. Weak Mutation 8: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;)[B:132 - ReplaceConstant - 512 -> 513
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;
      byte[] byteArray0 = SerializationUtils.serialize((Serializable) serializablePermission0);
      assertEquals(199, byteArray0.length);
  }

  //Test case number: 3
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I73 Branch 3 IFNULL L114 - false
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - true in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 3. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I73 Branch 3 IFNULL L114 - false in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 4. serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V_org.apache.commons.lang.exception.NestableRuntimeException_EXPLICIT
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 6. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 104
   * Goal 7. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 107
   * Goal 8. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 108
   * Goal 9. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 110
   * Goal 10. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 111
   * Goal 11. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 113
   * Goal 12. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 114
   * Goal 13. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 115
   * Goal 14. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 119
   * Goal 15. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 16. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 3: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:114 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"", "\"");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"");
      // Undeclared exception!
      try { 
        SerializationUtils.serialize((Serializable) mockFile0, (OutputStream) mockFileOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Error in writing to file
         //
         verifyException("org.apache.commons.lang.SerializationUtils", e);
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. [METHOD] org.apache.commons.lang.SerializationUtils.<init>()V
   * Goal 2. [METHODNOEX] org.apache.commons.lang.SerializationUtils.<init>()V
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SerializationUtils serializationUtils0 = new SerializationUtils();
  }

  //Test case number: 5
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I73 Branch 3 IFNULL L114 - true
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - true in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 3. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I73 Branch 3 IFNULL L114 - true in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 4. serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V_java.lang.NullPointerException_EXPLICIT
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 6. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 104
   * Goal 7. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 107
   * Goal 8. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 113
   * Goal 9. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 114
   * Goal 10. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 119
   * Goal 11. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 12. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 13. Weak Mutation 3: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:114 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0, true);
      // Undeclared exception!
      try { 
        SerializationUtils.serialize((Serializable) null, (OutputStream) mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * Goal 1. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I3 Branch 1 IFNONNULL L101 - true in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 2. Branch org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: I43 Branch 2 IFNULL L114 - false in context: org.apache.commons.lang.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 3. serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 101
   * Goal 5. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 104
   * Goal 6. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 107
   * Goal 7. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 108
   * Goal 8. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 114
   * Goal 9. org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V: Line 115
   * Goal 10. [METHOD] org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
   * Goal 11. Weak Mutation 0: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:101 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 2: org.apache.commons.lang.SerializationUtils.serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V:114 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        SerializationUtils.serialize((Serializable) uRI0, (OutputStream) bufferedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }
}
