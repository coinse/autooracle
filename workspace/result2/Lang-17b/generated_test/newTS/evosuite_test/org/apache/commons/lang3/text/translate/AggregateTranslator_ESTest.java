/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 29 10:27:34 GMT 2023
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang3.text.translate.AggregateTranslator;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.LookupTranslator;
import org.apache.commons.lang3.text.translate.NumericEntityEscaper;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.apache.commons.lang3.text.translate.OctalUnescaper;
import org.apache.commons.lang3.text.translate.UnicodeUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AggregateTranslator_ESTest extends AggregateTranslator_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch
   * Goal 2. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - false
   * Goal 3. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - true
   * Goal 4. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch in context: org.apache.commons.lang3.text.translate.AggregateTranslator:<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 5. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - false in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 6. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - true in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 7. translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 40
   * Goal 9. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 41
   * Goal 10. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 42
   * Goal 11. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 51
   * Goal 12. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 52
   * Goal 13. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 53
   * Goal 14. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 15. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 16. [METHODNOEX] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 17. Weak Mutation 0: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 1: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 19. Weak Mutation 2: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 20. Weak Mutation 3: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of i$
   * Goal 21. Weak Mutation 4: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 i$
   * Goal 22. Weak Mutation 5: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 i$
   * Goal 23. Weak Mutation 6: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable len$ -> index
   * Goal 24. Weak Mutation 7: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable len$ -> i$
   * Goal 25. Weak Mutation 8: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of len$
   * Goal 26. Weak Mutation 9: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 len$
   * Goal 27. Weak Mutation 10: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 len$
   * Goal 28. Weak Mutation 11: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 14: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 30. Weak Mutation 15: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 31. Weak Mutation 16: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of i$
   * Goal 32. Weak Mutation 17: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 i$
   * Goal 33. Weak Mutation 18: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 i$
   * Goal 34. Weak Mutation 39: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 35. Weak Mutation 40: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 36. Weak Mutation 19: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - ReplaceVariable index -> len$
   * Goal 37. Weak Mutation 20: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - ReplaceVariable index -> i$
   * Goal 38. Weak Mutation 21: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp Negation of index
   * Goal 39. Weak Mutation 22: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp IINC 1 index
   * Goal 40. Weak Mutation 23: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp IINC -1 index
   * Goal 41. Weak Mutation 24: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> index
   * Goal 42. Weak Mutation 25: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> i$
   * Goal 43. Weak Mutation 26: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> len$
   * Goal 44. Weak Mutation 27: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp Negation of consumed
   * Goal 45. Weak Mutation 28: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp IINC 1 consumed
   * Goal 46. Weak Mutation 29: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp IINC -1 consumed
   * Goal 47. Weak Mutation 30: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceComparisonOperator == -> -2
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[5];
      NumericEntityUnescaper.OPTION[] numericEntityUnescaper_OPTIONArray0 = new NumericEntityUnescaper.OPTION[4];
      NumericEntityUnescaper.OPTION numericEntityUnescaper_OPTION0 = NumericEntityUnescaper.OPTION.semiColonOptional;
      numericEntityUnescaper_OPTIONArray0[0] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[1] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[2] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[3] = numericEntityUnescaper_OPTIONArray0[0];
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper(numericEntityUnescaper_OPTIONArray0);
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) numericEntityUnescaper0;
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) octalUnescaper0;
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator(charSequenceTranslatorArray0);
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a').when(charSequence0).charAt(anyInt());
      doReturn(0).when(charSequence0).length();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        aggregateTranslator0.translate(charSequence0, (-1211), (Writer) stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.AggregateTranslator", e);
      }
  }

  //Test case number: 1
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch
   * Goal 2. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - true
   * Goal 3. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch in context: org.apache.commons.lang3.text.translate.AggregateTranslator:<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 4. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - true in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 5. [Output]: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:Zero
   * Goal 6. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 40
   * Goal 7. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 41
   * Goal 8. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 42
   * Goal 9. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 51
   * Goal 10. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 57
   * Goal 11. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 12. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 13. [METHODNOEX] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 14. [METHODNOEX] org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 15. Weak Mutation 0: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 1: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 17. Weak Mutation 3: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of i$
   * Goal 18. Weak Mutation 4: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 i$
   * Goal 19. Weak Mutation 5: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 i$
   * Goal 20. Weak Mutation 6: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable len$ -> index
   * Goal 21. Weak Mutation 8: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of len$
   * Goal 22. Weak Mutation 9: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 len$
   * Goal 23. Weak Mutation 10: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 len$
   * Goal 24. Weak Mutation 12: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 41: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:57 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[0];
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator(charSequenceTranslatorArray0);
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter();
      int int0 = aggregateTranslator0.translate(charSequence0, 24, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch
   * Goal 2. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - false
   * Goal 3. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - true
   * Goal 4. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - false
   * Goal 5. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: root-Branch in context: org.apache.commons.lang3.text.translate.AggregateTranslator:<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 6. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I15 Branch 1 IF_ICMPGE L51 - false in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 7. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - true in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 8. Branch org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: I31 Branch 2 IFEQ L53 - false in context: org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 9. [Output]: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:Positive
   * Goal 10. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 40
   * Goal 11. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 41
   * Goal 12. org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V: Line 42
   * Goal 13. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 51
   * Goal 14. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 52
   * Goal 15. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 53
   * Goal 16. org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I: Line 54
   * Goal 17. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 18. [METHOD] org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 19. [METHODNOEX] org.apache.commons.lang3.text.translate.AggregateTranslator.<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
   * Goal 20. [METHODNOEX] org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
   * Goal 21. Weak Mutation 0: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 1: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 23. Weak Mutation 2: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 24. Weak Mutation 3: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of i$
   * Goal 25. Weak Mutation 4: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 i$
   * Goal 26. Weak Mutation 5: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 i$
   * Goal 27. Weak Mutation 6: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable len$ -> index
   * Goal 28. Weak Mutation 7: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable len$ -> i$
   * Goal 29. Weak Mutation 8: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of len$
   * Goal 30. Weak Mutation 9: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 len$
   * Goal 31. Weak Mutation 10: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 len$
   * Goal 32. Weak Mutation 11: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 14: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 34. Weak Mutation 15: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 35. Weak Mutation 16: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp Negation of i$
   * Goal 36. Weak Mutation 17: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC 1 i$
   * Goal 37. Weak Mutation 18: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - InsertUnaryOp IINC -1 i$
   * Goal 38. Weak Mutation 39: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> index
   * Goal 39. Weak Mutation 40: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:51 - ReplaceVariable i$ -> len$
   * Goal 40. Weak Mutation 19: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - ReplaceVariable index -> len$
   * Goal 41. Weak Mutation 20: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - ReplaceVariable index -> i$
   * Goal 42. Weak Mutation 21: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp Negation of index
   * Goal 43. Weak Mutation 22: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp IINC 1 index
   * Goal 44. Weak Mutation 23: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:52 - InsertUnaryOp IINC -1 index
   * Goal 45. Weak Mutation 24: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> index
   * Goal 46. Weak Mutation 25: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> i$
   * Goal 47. Weak Mutation 26: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceVariable consumed -> len$
   * Goal 48. Weak Mutation 27: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp Negation of consumed
   * Goal 49. Weak Mutation 28: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp IINC 1 consumed
   * Goal 50. Weak Mutation 29: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - InsertUnaryOp IINC -1 consumed
   * Goal 51. Weak Mutation 30: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceComparisonOperator == -> -2
   * Goal 52. Weak Mutation 31: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:53 - ReplaceComparisonOperator == -> >=
   * Goal 53. Weak Mutation 33: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - ReplaceVariable consumed -> index
   * Goal 54. Weak Mutation 34: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - ReplaceVariable consumed -> i$
   * Goal 55. Weak Mutation 35: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - ReplaceVariable consumed -> len$
   * Goal 56. Weak Mutation 36: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - InsertUnaryOp Negation of consumed
   * Goal 57. Weak Mutation 37: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - InsertUnaryOp IINC 1 consumed
   * Goal 58. Weak Mutation 38: org.apache.commons.lang3.text.translate.AggregateTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I:54 - InsertUnaryOp IINC -1 consumed
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[5];
      NumericEntityUnescaper.OPTION[] numericEntityUnescaper_OPTIONArray0 = new NumericEntityUnescaper.OPTION[4];
      NumericEntityUnescaper.OPTION numericEntityUnescaper_OPTION0 = NumericEntityUnescaper.OPTION.semiColonOptional;
      numericEntityUnescaper_OPTIONArray0[0] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[1] = numericEntityUnescaper_OPTION0;
      numericEntityUnescaper_OPTIONArray0[2] = numericEntityUnescaper_OPTIONArray0[0];
      numericEntityUnescaper_OPTIONArray0[3] = numericEntityUnescaper_OPTION0;
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper(numericEntityUnescaper_OPTIONArray0);
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) numericEntityUnescaper0;
      OctalUnescaper octalUnescaper0 = new OctalUnescaper();
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) octalUnescaper0;
      UnicodeUnescaper unicodeUnescaper0 = new UnicodeUnescaper();
      charSequenceTranslatorArray0[2] = (CharSequenceTranslator) unicodeUnescaper0;
      CharSequence[][] charSequenceArray0 = new CharSequence[0][6];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      charSequenceTranslatorArray0[3] = (CharSequenceTranslator) lookupTranslator0;
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      charSequenceTranslatorArray0[4] = (CharSequenceTranslator) numericEntityEscaper0;
      AggregateTranslator aggregateTranslator0 = new AggregateTranslator(charSequenceTranslatorArray0);
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a', 'a', 'a').when(charSequence0).charAt(anyInt());
      doReturn(0, 0).when(charSequence0).length();
      StringWriter stringWriter0 = new StringWriter();
      int int0 = aggregateTranslator0.translate(charSequence0, (-1211), (Writer) stringWriter0);
      assertEquals(1, int0);
  }
}
